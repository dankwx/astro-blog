---
import Layout from "../layouts/PageLayout.astro";
import "../styles/global.css";

const blogPost = await Astro.glob("./posts/*.md");
const limitedPosts = blogPost.sort((a, b) => {
  // Handle missing pubDate
  if (!a.frontmatter.pubDate || !b.frontmatter.pubDate) {
    console.warn("Post(s) missing pubDate. Sorting by title.");
    return a.frontmatter.title.localeCompare(b.frontmatter.title);
  }

  // Extract timestamps for comparison
  const timestampA = new Date(a.frontmatter.pubDate).getTime();
  const timestampB = new Date(b.frontmatter.pubDate).getTime();

  // Sort based on timestamps (descending order for most recent)
  return timestampB - timestampA;
});

const threeMostRecent = limitedPosts.slice(0, 3);
---

<Layout title="Daniel Kondlatsch - dankwx">
  <main>
    <!-- Hero Section -->
    <section class="hero">
      <div class="hero-content">
        <div class="hero-text">
          <p class="greeting">Olá, eu sou</p>
          <h1 class="name">Daniel Kondlatsch</h1>
          <p class="title">Software Engineer</p>
          <p class="description">
            Transformo ideias em <span class="highlight">experiências digitais</span> 
            elegantes e funcionais. Apaixonado por código limpo e 
            <span class="highlight">interfaces intuitivas</span>.
          </p>
          <div class="cta-buttons">
            <a href="/about" class="btn-primary">Conheça minha história</a>
            <a href="#posts" class="btn-secondary">Ver posts</a>
          </div>
        </div>
        <div class="hero-visual">
          <div class="floating-card">
            <div class="code-snippet">
              <div class="code-header">
                <div class="dots">
                  <span></span>
                  <span></span>
                  <span></span>
                </div>
                <span class="filename">portfolio.tsx</span>
              </div>
              <div class="code-content">
                <span class="code-line"><span class="keyword">const</span> <span class="variable">developer</span> = {</span>
                <span class="code-line">  name: <span class="string">"Daniel"</span>,</span>
                <span class="code-line">  passion: <span class="string">"coding"</span>,</span>
                <span class="code-line">  focus: <span class="string">"frontend"</span></span>
                <span class="code-line">}</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Posts Section -->
    <section id="posts" class="posts-section">
      <div class="container">
        <div class="section-header">
          <h2>Últimos Posts</h2>
          <p>Compartilhando conhecimento e experiências</p>
        </div>
        
        <div class="posts-grid">
          {threeMostRecent.map((post, index) => (
            <article class="post-card" style={`--delay: ${index * 0.1}s`}>
              <a href={post.url} class="post-link">
                <div class="post-content">
                  <div class="post-meta">
                    {post.frontmatter.category && (
                      <div class="post-categories">
                        {(Array.isArray(post.frontmatter.category) ? post.frontmatter.category : [post.frontmatter.category]).map((cat: string) => (
                          <span class="category-tag">{cat}</span>
                        ))}
                      </div>
                    )}
                    {post.frontmatter.pubDate && (
                      <time class="post-date">
                        {new Date(post.frontmatter.pubDate).toLocaleDateString("pt-BR", {
                          year: 'numeric',
                          month: 'long',
                          day: 'numeric'
                        })}
                      </time>
                    )}
                  </div>
                  <h3 class="post-title">{post.frontmatter.title}</h3>
                  {post.frontmatter.description && (
                    <p class="post-description">{post.frontmatter.description}</p>
                  )}
                  <div class="read-more">
                    <span>Ler mais</span>
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M13.025 1l-2.847 2.828 6.176 6.176h-16.354v3.992h16.354l-6.176 6.176 2.847 2.828 10.975-11z"/>
                    </svg>
                  </div>
                </div>
              </a>
            </article>
          ))}
        </div>
        
        <div class="view-all">
          <a href="/blog" class="btn-outline">Ver todos os posts</a>
        </div>
      </div>
    </section>

    <!-- About Section -->
    <section class="about-section">
      <div class="container">
        <div class="about-content">
          <div class="about-text">
            <h2>Sobre mim</h2>
            <div class="about-description">
              <p>
                Crio sites desde criança, quando o Blogspot era uma ótima forma de 
                criar blogs. Mexia no código fonte, adicionava widgets JavaScript e 
                desenvolvia sites para familiares e projetos pessoais, especialmente 
                relacionados a jogos.
              </p>
              <p>
                Hoje sou um desenvolvedor front-end apaixonado por tudo relacionado à 
                criação de sites, frameworks e metodologias modernas. Nunca canso de 
                aprender novas tecnologias na área que tanto amo.
              </p>
              <p class="highlight-text">
                <strong>Programação é uma paixão que move minha vida.</strong>
              </p>
            </div>
            <div class="skills-preview">
              <span class="skill-tag">React</span>
              <span class="skill-tag">TypeScript</span>
              <span class="skill-tag">Astro</span>
              <span class="skill-tag">CSS</span>
              <span class="skill-tag">Next.js</span>
            </div>
          </div>
          <div class="about-visual">
            <div class="profile-card">
              <div class="card-glow"></div>
              <div class="profile-content">
                <div class="status-indicator">
                  <div class="status-dot"></div>
                  <span>Disponível para projetos</span>
                </div>
                <div class="location">
                  <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12 0c-4.198 0-8 3.403-8 7.602 0 4.198 3.469 9.21 8 16.398 4.531-7.188 8-12.2 8-16.398 0-4.199-3.801-7.602-8-7.602zm0 11c-1.657 0-3-1.343-3-3s1.343-3 3-3 3 1.343 3 3-1.343 3-3 3z"/>
                  </svg>
                  <span>Santa Catarina, Brasil</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>
</Layout>

<style>
  /* Variables */
  :root {
    --primary-color: #2563eb;
    --primary-hover: #1d4ed8;
    --secondary-color: #64748b;
    --accent-color: #f59e0b;
    --bg-primary: #ffffff;
    --bg-secondary: #f8fafc;
    --bg-accent: #f1f5f9;
    --text-primary: #0f172a;
    --text-secondary: #475569;
    --text-muted: #94a3b8;
    --border-color: #e2e8f0;
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    --gradient-primary: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
    --gradient-accent: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
  }

  /* Base Styles */
  main {
    width: 100%;
    min-height: 100vh;
    overflow-x: hidden;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
    width: 100%;
    box-sizing: border-box;
  }

  /* Hero Section */
  .hero {
    min-height: 90vh;
    display: flex;
    align-items: center;
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    position: relative;
    overflow: hidden;
  }

  .hero::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
      radial-gradient(circle at 20% 80%, rgba(37, 99, 235, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 80% 20%, rgba(245, 158, 11, 0.1) 0%, transparent 50%);
    pointer-events: none;
  }

  .hero-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: center;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
    position: relative;
    z-index: 1;
  }

  .hero-text {
    animation: fadeInUp 1s ease-out;
  }

  .greeting {
    font-size: 1.25rem;
    color: var(--text-secondary);
    margin-bottom: 1rem;
    font-weight: 500;
  }

  .name {
    font-size: 4rem;
    font-weight: 800;
    background: var(--gradient-primary);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    margin-bottom: 1rem;
    line-height: 1.1;
    letter-spacing: -0.025em;
  }

  .title {
    font-size: 1.5rem;
    color: var(--text-secondary);
    margin-bottom: 1.5rem;
    font-weight: 600;
  }

  .description {
    font-size: 1.25rem;
    line-height: 1.7;
    color: var(--text-secondary);
    margin-bottom: 2.5rem;
  }

  .highlight {
    background: var(--gradient-accent);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    font-weight: 600;
  }

  .cta-buttons {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .btn-primary, .btn-secondary, .btn-outline {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.875rem 1.75rem;
    border-radius: 0.75rem;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
    border: 2px solid transparent;
    font-size: 1rem;
  }

  .btn-primary {
    background: var(--gradient-primary);
    color: white;
    box-shadow: var(--shadow-md);
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
  }

  .btn-secondary {
    background: var(--bg-primary);
    color: var(--text-primary);
    border-color: var(--border-color);
    box-shadow: var(--shadow-sm);
  }

  .btn-secondary:hover {
    background: var(--bg-secondary);
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }

  .btn-outline {
    background: transparent;
    color: var(--primary-color);
    border-color: var(--primary-color);
  }

  .btn-outline:hover {
    background: var(--primary-color);
    color: white;
    transform: translateY(-1px);
  }

  /* Hero Visual */
  .hero-visual {
    display: flex;
    justify-content: center;
    align-items: center;
    animation: fadeInRight 1s ease-out 0.3s both;
  }

  .floating-card {
    background: var(--bg-primary);
    border-radius: 1rem;
    box-shadow: var(--shadow-xl);
    border: 1px solid var(--border-color);
    overflow: hidden;
    animation: float 6s ease-in-out infinite;
  }

  .code-snippet {
    width: 350px;
  }

  .code-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem;
    background: var(--bg-secondary);
    border-bottom: 1px solid var(--border-color);
  }

  .dots {
    display: flex;
    gap: 0.5rem;
  }

  .dots span {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: var(--text-muted);
  }

  .dots span:nth-child(1) { background: #ef4444; }
  .dots span:nth-child(2) { background: #f59e0b; }
  .dots span:nth-child(3) { background: #10b981; }

  .filename {
    font-size: 0.875rem;
    color: var(--text-secondary);
    font-weight: 500;
  }

  .code-content {
    padding: 1.5rem;
    font-family: 'Fira Code', 'Cascadia Code', monospace;
    font-size: 0.875rem;
    line-height: 1.6;
  }

  .code-line {
    display: block;
    margin-bottom: 0.25rem;
  }

  .keyword { color: #8b5cf6; }
  .variable { color: #3b82f6; }
  .string { color: #10b981; }

  /* Posts Section */
  .posts-section {
    padding: 6rem 0;
    background: var(--bg-primary);
  }

  .section-header {
    text-align: center;
    margin-bottom: 4rem;
  }

  .section-header h2 {
    font-size: 3rem;
    font-weight: 800;
    color: var(--text-primary);
    margin-bottom: 1rem;
    letter-spacing: -0.025em;
  }

  .section-header p {
    font-size: 1.25rem;
    color: var(--text-secondary);
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
    margin-bottom: 3rem;
  }

  .post-card {
    background: var(--bg-primary);
    border-radius: 1rem;
    border: 1px solid var(--border-color);
    overflow: hidden;
    transition: all 0.3s ease;
    animation: fadeInUp 0.6s ease-out calc(0.3s + var(--delay)) both;
  }

  .post-card:hover {
    transform: translateY(-8px);
    box-shadow: var(--shadow-xl);
    border-color: var(--primary-color);
  }

  .post-link {
    display: block;
    text-decoration: none;
    color: inherit;
    height: 100%;
  }

  .post-content {
    padding: 2rem;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .post-meta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1.5rem;
    gap: 1rem;
  }

  .post-categories {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .category-tag {
    padding: 0.25rem 0.75rem;
    background: var(--bg-accent);
    color: var(--primary-color);
    border-radius: 9999px;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .post-date {
    font-size: 0.875rem;
    color: var(--text-muted);
  }

  .post-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--text-primary);
    margin-bottom: 1rem;
    line-height: 1.3;
  }

  .post-description {
    color: var(--text-secondary);
    line-height: 1.6;
    margin-bottom: auto;
  }

  .read-more {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--primary-color);
    font-weight: 600;
    margin-top: 1.5rem;
    transition: gap 0.3s ease;
  }

  .post-card:hover .read-more {
    gap: 0.75rem;
  }

  .view-all {
    text-align: center;
  }

  /* About Section */
  .about-section {
    padding: 6rem 0;
    background: var(--bg-secondary);
  }

  .about-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: center;
  }

  .about-text h2 {
    font-size: 3rem;
    font-weight: 800;
    color: var(--text-primary);
    margin-bottom: 2rem;
    letter-spacing: -0.025em;
  }

  .about-description p {
    font-size: 1.125rem;
    line-height: 1.7;
    color: var(--text-secondary);
    margin-bottom: 1.5rem;
  }

  .highlight-text {
    color: var(--text-primary);
    font-size: 1.25rem;
  }

  .skills-preview {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
    margin-top: 2rem;
  }

  .skill-tag {
    padding: 0.5rem 1rem;
    background: var(--bg-primary);
    border: 1px solid var(--border-color);
    border-radius: 9999px;
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--text-primary);
  }

  .about-visual {
    display: flex;
    justify-content: center;
  }

  .profile-card {
    background: var(--bg-primary);
    border-radius: 1rem;
    border: 1px solid var(--border-color);
    padding: 2rem;
    position: relative;
    box-shadow: var(--shadow-lg);
  }

  .card-glow {
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: var(--gradient-primary);
    border-radius: 1rem;
    z-index: -1;
    opacity: 0.1;
  }

  .status-indicator {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 1rem;
  }

  .status-dot {
    width: 8px;
    height: 8px;
    background: #10b981;
    border-radius: 50%;
    animation: pulse 2s infinite;
  }

  .location {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--text-secondary);
  }

  /* Animations */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fadeInRight {
    from {
      opacity: 0;
      transform: translateX(30px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .hero-content {
      grid-template-columns: 1fr;
      gap: 3rem;
      text-align: center;
    }

    .about-content {
      grid-template-columns: 1fr;
      gap: 3rem;
    }

    .name {
      font-size: 3rem;
    }

    .code-snippet {
      width: 300px;
    }
  }

  @media (max-width: 768px) {
    .container {
      padding: 0 1rem;
    }

    .hero {
      min-height: 80vh;
      padding: 2rem 0;
    }

    .hero-content {
      gap: 2rem;
    }

    .name {
      font-size: 2.5rem;
    }

    .description {
      font-size: 1.125rem;
    }

    .section-header h2 {
      font-size: 2.5rem;
    }

    .about-text h2 {
      font-size: 2.5rem;
    }

    .posts-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .cta-buttons {
      flex-direction: column;
      align-items: center;
    }

    .btn-primary, .btn-secondary, .btn-outline {
      width: 100%;
      justify-content: center;
      max-width: 300px;
    }

    .code-snippet {
      width: 280px;
    }

    .code-content {
      padding: 1rem;
      font-size: 0.75rem;
    }
  }

  @media (max-width: 480px) {
    .hero {
      padding: 1rem 0;
    }

    .name {
      font-size: 2rem;
    }

    .section-header h2 {
      font-size: 2rem;
    }

    .about-text h2 {
      font-size: 2rem;
    }

    .posts-section, .about-section {
      padding: 4rem 0;
    }
  }
</style>
